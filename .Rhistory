subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(0.15,0.55),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)
)
engagements
#plot
engagements <- date %>%
ggplot() +
geom_histogram(aes(x = date, color = Category, fill = Category),
binwidth = 91, position = "stack") + #quarterly
geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2016-09-01")), y = 15,
label = "Passed qualifying exam", angle = 90,
vjust = -1) +
geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2019-01-01")), y = 15,
label = "Started career at CalEPA", angle = 90,
vjust = -1) +
scale_x_date(limits = as.Date(c("2014-01-01", "2022-6-01")),
date_breaks = "4 months",
date_labels = "%B (%Y)"
) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(0.15,0.55),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)
)
engagements
#plot
engagements <- date %>%
ggplot() +
geom_histogram(aes(x = date, color = Category, fill = Category),
binwidth = 91, position = "stack") + #quarterly
geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2016-09-01")), y = 15,
label = "Passed qualifying exam", angle = 90,
vjust = -1) +
geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2019-01-01")), y = 15,
label = "Started career at CalEPA", angle = 90,
vjust = -1) +
scale_x_date(limits = as.Date(c("2014-01-01", "2022-6-01")),
date_breaks = "5 months",
date_labels = "%B (%Y)"
) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(0.15,0.55),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)
)
engagements
#plot
engagements <- date %>%
ggplot() +
geom_histogram(aes(x = date, color = Category, fill = Category),
binwidth = 91, position = "stack") + #quarterly
geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2016-09-01")), y = 15,
label = "Passed qualifying exam", angle = 90,
vjust = -1) +
geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2019-01-01")), y = 15,
label = "Started career at CalEPA", angle = 90,
vjust = -1) +
scale_x_date(limits = as.Date(c("2014-01-01", "2022-5-01")),
date_breaks = "5 months",
date_labels = "%B (%Y)"
) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(0.15,0.55),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)
)
engagements
interactive <- plot_ly(x = date, color = Category, fill = Category, type = 'bar')
ggplotly(engagements)
?ggplotly()
ggplotly(engagements,
width = 12,
height = 8,
tooltip = c("count", "Category"))
ggplotly(engagements,
width = 12,
height = 8,
tooltip = c("count", "Category"))
ggplotly(engagements,
#  width = 12,
# height = 8,
tooltip = c("count", "Category"))
#plot
engagements <- date %>%
ggplot() +
geom_histogram(aes(x = date,
#color = Category,
fill = Category),
binwidth = 91, position = "stack") + #quarterly
geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2016-09-01")), y = 15,
label = "Passed qualifying exam", angle = 90,
vjust = -1) +
geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2019-01-01")), y = 15,
label = "Started career at CalEPA", angle = 90,
vjust = -1) +
scale_x_date(limits = as.Date(c("2014-01-01", "2022-5-01")),
date_breaks = "5 months",
date_labels = "%B (%Y)"
) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(0.15,0.55),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)
)
engagements
ggplotly(engagements,
#  width = 12,
# height = 8,
tooltip = c("count", "Category"))
#plot
engagements <- date %>%
ggplot() +
geom_histogram(aes(x = date,
#color = Category,
fill = Category),
binwidth = 91, position = "stack") + #quarterly
#geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
# geom_text(x = as.numeric(as.Date("2016-09-01")), y = 15,
#           label = "Passed qualifying exam", angle = 90,
#           vjust = -1) +
# geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
#  geom_text(x = as.numeric(as.Date("2019-01-01")), y = 15,
#           label = "Started career at CalEPA", angle = 90,
#           vjust = -1) +
scale_x_date(limits = as.Date(c("2014-01-01", "2022-5-01")),
date_breaks = "5 months",
date_labels = "%B (%Y)"
) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(0.15,0.55),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)
)
ggplotly(engagements,
#  width = 12,
# height = 8,
tooltip = c("count", "Category"))
plotly <- ggplotly(engagements,
#  width = 12,
# height = 8,
tooltip = c("count", "Category"))
htmlwidgets::saveWidget(plotly::as_widget(plotly), "assets/engagements.html")
plotly
htmlwidgets::saveWidget(plotly::as_widget(plotly), "assets/widgets/engagements.html")
library(data.table)
library(DT)
datatable(cv)
datatable(cv,
options = list(autoWidth = TRUE),
filter = list(position = 'top', clear = FALSE))
mutate(Category = as.factor(Category),
Type = as.factor(Type),
Face = as.factor(Face))
#convert dates
date <- cv %>%
mutate(day = 1) %>%
mutate(month_number = match(Month, month.name)) %>%
mutate(date = make_date(year = Year, month = month_number, day = day)) %>%
mutate(Category = as.factor(Category),
Type = as.factor(Type),
Face = as.factor(Face))
datatable(cv,
options = list(autoWidth = TRUE),
filter = list(position = 'top', clear = FALSE))
datatable(cv,
options = list(autoWidth = TRUE),
filter = list(position = 'top'))
datatable(cv,
options = list(autoWidth = TRUE),
filter = list(position = 'top'))
datatable(cv,
options = list(autoWidth = TRUE),
filter = list(position = 'top'),
rownames = FASLE)
datatable(cv,
options = list(autoWidth = TRUE),
filter = list(position = 'top'),
rownames = FALSE)
datatable(date,
options = list(autoWidth = TRUE),
filter = list(position = 'top'),
rownames = FALSE)
datatable(date %>%  dplyr::select(-c(Year, Monrth, day, mont_number)),
options = list(autoWidth = TRUE),
filter = list(position = 'top'),
rownames = FALSE)
datatable(date %>%  dplyr::select(-c(Year, Monrth, day, month_number)),
options = list(autoWidth = TRUE),
filter = list(position = 'top'),
rownames = FALSE)
table <- date %>%  dplyr::select(-c(Year, Monrth, day, month_number)
datatable(),
table <- date %>%  dplyr::select(-c(Year, Monrth, day, month_number))
table <- date %>%  dplyr::select(-c(Year, Monrth, day, month_number))
table <- date %>%  dplyr::select(-(Year, Monrth, day, month_number))
table <- date %>%  dplyr::select(-(Year, Month, day, month_number))
table <- date %>%  dplyr::select(-c(Year, Month, day, month_number))
datatable(table),
datatable(table),
table <- date %>% dplyr::select(-c(Year, Month, day, month_number))
datatable(table,
options = list(autoWidth = TRUE),
filter = list(position = 'top'),
rownames = FALSE))
datatable(table,
options = list(autoWidth = TRUE),
filter = list(position = 'top'),
rownames = FALSE)
htmlwidgets::saveWidget(datatable, "assets/widgets/datatable.html")
datatable <- datatable(table,
options = list(autoWidth = TRUE),
filter = list(position = 'top'),
rownames = FALSE)
htmlwidgets::saveWidget(datatable, "assets/widgets/datatable.html")
htmlwidgets::saveWidget(datatable, "assets/widgets/datatable.html")
datatable
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(lubridate)
library(plotly)
#read in data
cv <- readxl::read_xlsx("assets/data/presentation tracking spreadsheet.xlsx")
#convert dates
date <- cv %>%
mutate(day = 1) %>%
mutate(month_number = match(Month, month.name)) %>%
mutate(date = make_date(year = Year, month = month_number, day = day)) %>%
mutate(Category = as.factor(Category),
Type = as.factor(Type),
Face = as.factor(Face))
#plot
engagements <- date %>%
ggplot() +
geom_histogram(aes(x = date,
#color = Category,
fill = Category),
binwidth = 91, position = "stack") + #quarterly
#geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
# geom_text(x = as.numeric(as.Date("2016-09-01")), y = 15,
#           label = "Passed qualifying exam", angle = 90,
#           vjust = -1) +
# geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
#  geom_text(x = as.numeric(as.Date("2019-01-01")), y = 15,
#           label = "Started career at CalEPA", angle = 90,
#           vjust = -1) +
scale_x_date(limits = as.Date(c("2014-01-01", "2022-5-01")),
date_breaks = "5 months",
date_labels = "%B (%Y)"
) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(0.15,0.55),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)
)
engagements
ggsave(engagements,
file = "assets/engagements.jpeg",
bg = "white",
dpi = 300,
width = 8, height = 6,
units = "in",
scale = 0.8)
plotly <- ggplotly(engagements,
#  width = 12,
# height = 8,
tooltip = c("count", "Category"))
htmlwidgets::saveWidget(plotly::as_widget(plotly), "assets/widgets/engagements.html")
plotly
library(DT)
table <- date %>% dplyr::select(c(Year, Month, day, month_number))
datatable <- datatable(table,
options = list(autoWidth = TRUE),
filter = list(position = 'top'),
rownames = FALSE)
htmlwidgets::saveWidget(datatable, "assets/widgets/datatable.html")
datatable
date %>%
group_by(Category) %>%
summarize(n())
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(lubridate)
library(plotly)
#read in data
cv <- readxl::read_xlsx("assets/data/presentation tracking spreadsheet.xlsx")
#convert dates
date <- cv %>%
mutate(day = 1) %>%
mutate(month_number = match(Month, month.name)) %>%
mutate(date = make_date(year = Year, month = month_number, day = day)) %>%
mutate(Category = as.factor(Category),
Type = as.factor(Type),
Face = as.factor(Face))
#plot
engagements <- date %>%
ggplot() +
geom_histogram(aes(x = date,
#color = Category,
fill = Category),
binwidth = 91, position = "stack") + #quarterly
#geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
# geom_text(x = as.numeric(as.Date("2016-09-01")), y = 15,
#           label = "Passed qualifying exam", angle = 90,
#           vjust = -1) +
# geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
#  geom_text(x = as.numeric(as.Date("2019-01-01")), y = 15,
#           label = "Started career at CalEPA", angle = 90,
#           vjust = -1) +
scale_x_date(limits = as.Date(c("2014-01-01", "2022-6-01")),
date_breaks = "5 months",
date_labels = "%B (%Y)"
) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(0.15,0.55),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)
)
engagements
ggsave(engagements,
file = "assets/engagements.jpeg",
bg = "white",
dpi = 300,
width = 8, height = 6,
units = "in",
scale = 0.8)
plotly <- ggplotly(engagements,
#  width = 12,
# height = 8,
tooltip = c("count", "Category"))
htmlwidgets::saveWidget(plotly::as_widget(plotly), "assets/widgets/engagements.html")
plotly
library(DT)
table <- date %>% dplyr::select(c(Year, Month, day, month_number))
datatable <- datatable(table,
options = list(autoWidth = TRUE),
filter = list(position = 'top'),
rownames = FALSE)
htmlwidgets::saveWidget(datatable, "assets/widgets/datatable.html")
datatable
date %>%
group_by(Category) %>%
summarize(n())
#read in data
cv <- readxl::read_xlsx("assets/data/presentation tracking spreadsheet.xlsx")
#convert dates
date <- cv %>%
mutate(day = 1) %>%
mutate(month_number = match(Month, month.name)) %>%
mutate(date = make_date(year = Year, month = month_number, day = day)) %>%
mutate(Category = as.factor(Category),
Type = as.factor(Type),
Face = as.factor(Face))
#plot
engagements <- date %>%
ggplot() +
geom_histogram(aes(x = date,
#color = Category,
fill = Category),
binwidth = 91, position = "stack") + #quarterly
#geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
# geom_text(x = as.numeric(as.Date("2016-09-01")), y = 15,
#           label = "Passed qualifying exam", angle = 90,
#           vjust = -1) +
# geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
#  geom_text(x = as.numeric(as.Date("2019-01-01")), y = 15,
#           label = "Started career at CalEPA", angle = 90,
#           vjust = -1) +
scale_x_date(limits = as.Date(c("2014-01-01", "2022-01-06")),
date_breaks = "5 months",
date_labels = "%B (%Y)"
) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(0.15,0.55),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)
)
engagements
#read in data
cv <- readxl::read_xlsx("assets/data/presentation tracking spreadsheet.xlsx")
#convert dates
date <- cv %>%
mutate(day = 1) %>%
mutate(month_number = match(Month, month.name)) %>%
mutate(date = make_date(year = Year, month = month_number, day = day)) %>%
mutate(Category = as.factor(Category),
Type = as.factor(Type),
Face = as.factor(Face))
#plot
engagements <- date %>%
ggplot() +
geom_histogram(aes(x = date,
#color = Category,
fill = Category),
binwidth = 91, position = "stack") + #quarterly
#geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
# geom_text(x = as.numeric(as.Date("2016-09-01")), y = 15,
#           label = "Passed qualifying exam", angle = 90,
#           vjust = -1) +
# geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
#  geom_text(x = as.numeric(as.Date("2019-01-01")), y = 15,
#           label = "Started career at CalEPA", angle = 90,
#           vjust = -1) +
scale_x_date(#limits = as.Date(c("2014-01-01", "2022-01-06")),
date_breaks = "5 months",
date_labels = "%B (%Y)"
) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(0.15,0.55),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)
)
engagements
#read in data
cv <- readxl::read_xlsx("assets/data/presentation tracking spreadsheet.xlsx")
#convert dates
date <- cv %>%
mutate(day = 1) %>%
mutate(month_number = match(Month, month.name)) %>%
mutate(date = make_date(year = Year, month = month_number, day = day)) %>%
mutate(Category = as.factor(Category),
Type = as.factor(Type),
Face = as.factor(Face))
#plot
engagements <- date %>%
ggplot() +
geom_histogram(aes(x = date,
#color = Category,
fill = Category),
binwidth = 91, position = "stack") + #quarterly
#geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
# geom_text(x = as.numeric(as.Date("2016-09-01")), y = 15,
#           label = "Passed qualifying exam", angle = 90,
#           vjust = -1) +
# geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
#  geom_text(x = as.numeric(as.Date("2019-01-01")), y = 15,
#           label = "Started career at CalEPA", angle = 90,
#           vjust = -1) +
scale_x_date(limits = as.Date(c("2014-01-01", "2022-07-01")),
date_breaks = "5 months",
date_labels = "%B (%Y)"
) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(0.15,0.55),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)
)
engagements
