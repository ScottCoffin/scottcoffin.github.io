ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"))
#plot
engagements <- date %>%
ggplot() +
geom_histogram(aes(x = date, color = Category, fill = Category),
binwidth = 91, position = "stack") + #quarterly
geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2016-09-01")), y = 9,
label = "Passed qualifying exam", angle = 90,
vjust = -1) +
geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2019-01-01")), y = 9,
label = "Started career at CalEPA", angle = 90,
vjust = -1) +
scale_x_date(limits = as.Date(c("2014-01-01", "2021-12-01"))) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"))
engagements
ggsave(engagements,
file = "assets/engagements.jpeg")
ggsave(engagements,
file = "assets/engagements.jpeg",
bg = "white")
ggsave(engagements,
file = "assets/engagements.jpeg",
bg = "white",
width = 6, height = 6)
ggsave(engagements,
file = "assets/engagements.jpeg",
bg = "white",
width = 6, height = 4)
ggsave(engagements,
file = "assets/engagements.jpeg",
bg = "white",
width = 8, height = 6)
6
ggsave(engagements,
file = "assets/engagements.jpeg",
bg = "white",
width = 6, height = 4)
ggsave(engagements,
file = "assets/engagements.jpeg",
bg = "white",
width = 6, height = 4,
units = "in")
ggsave(engagements,
file = "assets/engagements.jpeg",
bg = "white",
width = 6, height = 4,
units = "in")
ggsave(engagements,
file = "assets/engagements.jpeg",
bg = "white",
width = 6, height = 4,
units = "in",
scale = 1.4)
ggsave(engagements,
file = "assets/engagements.jpeg",
bg = "white",
width = 6, height = 4,
units = "in",
scale = 0.7)
ggsave(engagements,
file = "assets/engagements.jpeg",
bg = "white",
width = 6, height = 4,
units = "in",
scale = 0.9)
ggsave(engagements,
file = "assets/engagements.jpeg",
bg = "white",
width = 8, height = 6,
units = "in",
scale = 0.9)
ggsave(engagements,
file = "assets/engagements.jpeg",
bg = "white",
width = 8, height = 6,
units = "in",
scale = 0.7)
ggsave(engagements,
file = "assets/engagements.jpeg",
bg = "white",
width = 8, height = 6,
units = "in",
scale = 0.8)
#plot
engagements <- date %>%
ggplot() +
geom_histogram(aes(x = date, color = Category, fill = Category),
binwidth = 91, position = "stack") + #quarterly
geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2016-09-01")), y = 9,
label = "Passed qualifying exam", angle = 90,
vjust = -1) +
geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2019-01-01")), y = 9,
label = "Started career at CalEPA", angle = 90,
vjust = -1) +
scale_x_date(limits = as.Date(c("2014-01-01", "2021-12-01"))) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(as.numeric(as.Date(c("2014-01-01", "2021-12-01"))),12)
)
engagements
#plot
engagements <- date %>%
ggplot() +
geom_histogram(aes(x = date, color = Category, fill = Category),
binwidth = 91, position = "stack") + #quarterly
geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2016-09-01")), y = 9,
label = "Passed qualifying exam", angle = 90,
vjust = -1) +
geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2019-01-01")), y = 9,
label = "Started career at CalEPA", angle = 90,
vjust = -1) +
scale_x_date(limits = as.Date(c("2014-01-01", "2021-12-01"))) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(as.numeric(as.Date(c("2014-01-01", "2021-12-01"))),5)
)
engagements
#plot
engagements <- date %>%
ggplot() +
geom_histogram(aes(x = date, color = Category, fill = Category),
binwidth = 91, position = "stack") + #quarterly
geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2016-09-01")), y = 9,
label = "Passed qualifying exam", angle = 90,
vjust = -1) +
geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2019-01-01")), y = 9,
label = "Started career at CalEPA", angle = 90,
vjust = -1) +
scale_x_date(limits = as.Date(c("2014-01-01", "2021-12-01"))) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(0,1)
)
engagements
#plot
engagements <- date %>%
ggplot() +
geom_histogram(aes(x = date, color = Category, fill = Category),
binwidth = 91, position = "stack") + #quarterly
geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2016-09-01")), y = 9,
label = "Passed qualifying exam", angle = 90,
vjust = -1) +
geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2019-01-01")), y = 9,
label = "Started career at CalEPA", angle = 90,
vjust = -1) +
scale_x_date(limits = as.Date(c("2014-01-01", "2021-12-01"))) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(0.1,1)
)
engagements
#plot
engagements <- date %>%
ggplot() +
geom_histogram(aes(x = date, color = Category, fill = Category),
binwidth = 91, position = "stack") + #quarterly
geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2016-09-01")), y = 9,
label = "Passed qualifying exam", angle = 90,
vjust = -1) +
geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2019-01-01")), y = 9,
label = "Started career at CalEPA", angle = 90,
vjust = -1) +
scale_x_date(limits = as.Date(c("2014-01-01", "2021-12-01"))) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(0.2,1)
)
engagements
#plot
engagements <- date %>%
ggplot() +
geom_histogram(aes(x = date, color = Category, fill = Category),
binwidth = 91, position = "stack") + #quarterly
geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2016-09-01")), y = 9,
label = "Passed qualifying exam", angle = 90,
vjust = -1) +
geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2019-01-01")), y = 9,
label = "Started career at CalEPA", angle = 90,
vjust = -1) +
scale_x_date(limits = as.Date(c("2014-01-01", "2021-12-01"))) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(0.15,0.95)
)
engagements
ggsave(engagements,
file = "assets/engagements.jpeg",
bg = "white",
width = 8, height = 6,
units = "in",
scale = 0.8)
cv %>% group_by(Year) %>%  summarize(n())
38/75
install.packages("spiralize")
#load data
covid <- read.csv("data/owid-covid-data.csv", stringsAsFactors = FALSE)
#load data
covid <- read.csv("_data/owid-covid-data.csv", stringsAsFactors = FALSE)
#Subset to just the United States, and create a column dt, which is a Date-Time object version of the date column:
us <- covid[covid$location == "United States" & !is.na(covid$new_cases_smoothed),]
us$dt <- strptime(us$date, format="%Y-%m-%d")
#To match the NYT version, also subset to dates prior to January 7, 2022:
us <- us[us$dt < "2022-01-07",]
#Get the maximum case count:
ymax <- max(us$new_cases_smoothed)
# Initialize.
spiral_initialize_by_time(xlim=c("2020-01-01 00:00:00", "2022-01-06 00:00:00"),
unit_on_axis = "days", period="years",
start=90, end=(709/365)*360+(28/365)*360+90,
flip="horizontal")
#install.packages("spiralize")
library("spiralize")
# Initialize.
spiral_initialize_by_time(xlim=c("2020-01-01 00:00:00", "2022-01-06 00:00:00"),
unit_on_axis = "days", period="years",
start=90, end=(709/365)*360+(28/365)*360+90,
flip="horizontal")
# Create the track.
spiral_track(ylim=c(0, ymax*.7),
background=FALSE, background_gp = gpar(col = NA, fill = NA))
#Then draw the polygon, which puts half the case count on the bottom and the other half on top:
# Use a polygon.
spiral_polygon(x=c(us$dt, rev(us$dt)),
y=c(us$new_cases_smoothed/2, -rev(us$new_cases_smoothed/2)),
gp = gpar(col="#d32e2b", fill="#d32e2b50"))
# Middle baseline.
spiral_lines(x=us$dt, y=0)
#At this point, I’d export and bring into Adobe Illustrator to edit, which I’m pretty sure is what Wezerek and Chodosh did. But the spiralize package also provides a spiral_text() function if you want:
# Text.
spiral_text(x="2020-01-01", y=50000, text="2020",
facing = "curved_inside", just = "right",
gp=gpar(cex=1, fontfamily="Courier"))
spiral_text(x="2021-01-01", y=50000, text="2021",
facing = "curved_inside", just = "right",
gp=gpar(cex=1, fontfamily="Courier"))
spiral_text(x="2022-01-01", y=50000, text="2022",
facing = "curved_inside", just = "right",
gp=gpar(cex=1, fontfamily="Courier"))
##### Meme Generator ####
library(meme)
install.packages("meme")
##### Meme Generator ####
library(meme)
if (.Platform$OS.type == "windows") {
windowsFonts(
Impact = windowsFont("Impact"),
Courier = windowsFont("Courier")
)
}
?meme
##### Meme Generator ####
library(memer)
#meme list
meme_list()
library(mem)
library(meme)
browseVignettes("memes")
install.packages("cols4all")
# install.packages("devtools")
devtools::install_github("mtennekes/cols4all")
# For the GUI, shiny, shinyjs, and kableExtra are required
# install.packages(c("shiny", "shinyjs", "kableExtra"))
c4a_gui()
library(cols4all)
# install.packages("devtools")
devtools::install_github("mtennekes/cols4all")
library(cols4all)
# For the GUI, shiny, shinyjs, and kableExtra are required
# install.packages(c("shiny", "shinyjs", "kableExtra"))
c4a_gui()
c("#CC6677", "#332288", "#DDCC77", "#117733", "#88CCEE", "#882255", "#44AA99", "#999933", "#AA4499")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(lubridate)
#read in data
cv <- readxl::read_xlsx("assets/data/presentation tracking spreadsheet.xlsx")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(lubridate)
#read in data
cv <- readxl::read_xlsx("assets/data/presentation tracking spreadsheet.xlsx")
#convert dates
date <- cv %>%
mutate(day = 1) %>%
mutate(month_number = match(Month, month.name)) %>%
mutate(date = make_date(year = Year, month = month_number, day = day))
#plot
engagements <- date %>%
ggplot() +
geom_histogram(aes(x = date, color = Category, fill = Category),
binwidth = 91, position = "stack") + #quarterly
geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2016-09-01")), y = 9,
label = "Passed qualifying exam", angle = 90,
vjust = -1) +
geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2019-01-01")), y = 9,
label = "Started career at CalEPA", angle = 90,
vjust = -1) +
scale_x_date(limits = as.Date(c("2014-01-01", "2021-12-01"))) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(0.15,0.95)
)
engagements
ggsave(engagements,
file = "assets/engagements.jpeg",
bg = "white",
width = 8, height = 6,
units = "in",
scale = 0.8)
#read in data
cv <- readxl::read_xlsx("assets/data/presentation tracking spreadsheet.xlsx")
#convert dates
date <- cv %>%
mutate(day = 1) %>%
mutate(month_number = match(Month, month.name)) %>%
mutate(date = make_date(year = Year, month = month_number, day = day))
#plot
engagements <- date %>%
ggplot() +
geom_histogram(aes(x = date, color = Category, fill = Category),
binwidth = 91, position = "stack") + #quarterly
geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2016-09-01")), y = 15,
label = "Passed qualifying exam", angle = 90,
vjust = -1) +
geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2019-01-01")), y = 15,
label = "Started career at CalEPA", angle = 90,
vjust = -1) +
scale_x_date(limits = as.Date(c("2014-01-01", "2021-12-01"))) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(0.15,0.95)
)
engagements
ggsave(engagements,
file = "assets/engagements.jpeg",
bg = "white",
width = 8, height = 6,
units = "in",
scale = 0.8)
#read in data
cv <- readxl::read_xlsx("assets/data/presentation tracking spreadsheet.xlsx")
#convert dates
date <- cv %>%
mutate(day = 1) %>%
mutate(month_number = match(Month, month.name)) %>%
mutate(date = make_date(year = Year, month = month_number, day = day))
#plot
engagements <- date %>%
ggplot() +
geom_histogram(aes(x = date, color = Category, fill = Category),
binwidth = 91, position = "stack") + #quarterly
geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2016-09-01")), y = 15,
label = "Passed qualifying exam", angle = 90,
vjust = -1) +
geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2019-01-01")), y = 15,
label = "Started career at CalEPA", angle = 90,
vjust = -1) +
scale_x_date(limits = as.Date(c("2014-01-01", "2022-6-01"))) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(0.15,0.95)
)
engagements
ggsave(engagements,
file = "assets/engagements.jpeg",
bg = "white",
width = 8, height = 6,
units = "in",
scale = 0.8)
#plot
engagements <- date %>%
ggplot() +
geom_histogram(aes(x = date, color = Category, fill = Category),
binwidth = 91, position = "stack") + #quarterly
geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2016-09-01")), y = 15,
label = "Passed qualifying exam", angle = 90,
vjust = -1) +
geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2019-01-01")), y = 15,
label = "Started career at CalEPA", angle = 90,
vjust = -1) +
scale_x_date(limits = as.Date(c("2014-01-01", "2022-6-01"))) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(0.15,0.75)
)
engagements
#plot
engagements <- date %>%
ggplot() +
geom_histogram(aes(x = date, color = Category, fill = Category),
binwidth = 91, position = "stack") + #quarterly
geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2016-09-01")), y = 15,
label = "Passed qualifying exam", angle = 90,
vjust = -1) +
geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
geom_text(x = as.numeric(as.Date("2019-01-01")), y = 15,
label = "Started career at CalEPA", angle = 90,
vjust = -1) +
scale_x_date(limits = as.Date(c("2014-01-01", "2022-6-01"))) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(0.15,0.55)
)
engagements
ggsave(engagements,
file = "assets/engagements.jpeg",
bg = "white",
width = 8, height = 6,
units = "in",
scale = 0.8)
date %>%
group_by(Category) %>%
summarize(n())
ggsave(engagements,
file = "assets/engagements.jpeg",
bg = "white",
dpi = 300,
width = 8, height = 6,
units = "in",
scale = 0.8)
