fill = Face,
),
binwidth = 3,
position = "stack") + #quarterly
#geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
# geom_text(x = as.numeric(as.Date("2016-09-01")), y = 15,
#           label = "Passed qualifying exam", angle = 90,
#           vjust = -1) +
# geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
#  geom_text(x = as.numeric(as.Date("2019-01-01")), y = 15,
#           label = "Started career at CalEPA", angle = 90,
#           vjust = -1) +
scale_x_date(limits = as.Date(c("2014-04-01", "2022-11-01")),
date_breaks = "3 months",
date_labels = "%B (%Y)"
) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(0.15,0.55),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)
)
engagements
#read in data
cv <- readxl::read_xlsx("assets/data/presentation tracking spreadsheet.xlsx")
#convert dates
date <- cv %>%
mutate(day = 1) %>%
mutate(month_number = match(Month, month.name)) %>%
mutate(date = make_date(year = Year, month = month_number, day = day)) %>%
mutate(Category = as.factor(Category),
Type = as.factor(Type),
Face = as.factor(Face))
#plot
engagements <- date %>%
ggplot() +
geom_histogram(aes(x = date,
#color = Category,
fill = Category
#fill = Face,
),
binwidth = 91,
position = "stack") + #quarterly
#geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
# geom_text(x = as.numeric(as.Date("2016-09-01")), y = 15,
#           label = "Passed qualifying exam", angle = 90,
#           vjust = -1) +
# geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
#  geom_text(x = as.numeric(as.Date("2019-01-01")), y = 15,
#           label = "Started career at CalEPA", angle = 90,
#           vjust = -1) +
scale_x_date(limits = as.Date(c("2014-04-01", "2022-11-01")),
date_breaks = "3 months",
date_labels = "%B (%Y)"
) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(0.15,0.55),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)
)
engagements
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(lubridate)
library(plotly)
#read in data
cv <- readxl::read_xlsx("assets/data/presentation tracking spreadsheet.xlsx")
#convert dates
date <- cv %>%
mutate(day = 1) %>%
mutate(month_number = match(Month, month.name)) %>%
mutate(date = make_date(year = Year, month = month_number, day = day)) %>%
mutate(Category = as.factor(Category),
Type = as.factor(Type),
Face = as.factor(Face))
#plot
engagements <- date %>%
ggplot() +
geom_histogram(aes(x = date,
#color = Category,
fill = Category
#fill = Face,
),
binwidth = 91,
position = "stack") + #quarterly
#geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
# geom_text(x = as.numeric(as.Date("2016-09-01")), y = 15,
#           label = "Passed qualifying exam", angle = 90,
#           vjust = -1) +
# geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
#  geom_text(x = as.numeric(as.Date("2019-01-01")), y = 15,
#           label = "Started career at CalEPA", angle = 90,
#           vjust = -1) +
scale_x_date(limits = as.Date(c("2014-04-01", "2022-11-01")),
date_breaks = "3 months",
date_labels = "%B (%Y)"
) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(0.15,0.55),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)
)
engagements
ggsave(engagements,
file = "assets/engagements.jpeg",
bg = "white",
dpi = 300,
width = 8, height = 6,
units = "in",
scale = 0.8)
plotly <- ggplotly(engagements,
#  width = 12,
# height = 8,
tooltip = c("count", "Category"))
htmlwidgets::saveWidget(plotly::as_widget(plotly), "assets/widgets/engagements.html")
plotly
library(DT)
table <- date %>% dplyr::select(c(Year, Month, day, month_number))
datatable <- datatable(table,
options = list(autoWidth = TRUE),
filter = list(position = 'top'),
rownames = FALSE)
htmlwidgets::saveWidget(datatable, "assets/widgets/datatable.html")
datatable
date %>%
group_by(Category) %>%
summarize(n())
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(lubridate)
library(plotly)
#read in data
cv <- readxl::read_xlsx("assets/data/presentation tracking spreadsheet.xlsx")
#convert dates
date <- cv %>%
mutate(day = 1) %>%
mutate(month_number = match(Month, month.name)) %>%
mutate(date = make_date(year = Year, month = month_number, day = day)) %>%
mutate(Category = as.factor(Category),
Type = as.factor(Type),
Face = as.factor(Face))
#plot
engagements <- date %>%
ggplot() +
geom_histogram(aes(x = date,
#color = Category,
fill = Category
#fill = Face,
),
binwidth = 91,
position = "stack") + #quarterly
#geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
# geom_text(x = as.numeric(as.Date("2016-09-01")), y = 15,
#           label = "Passed qualifying exam", angle = 90,
#           vjust = -1) +
# geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
#  geom_text(x = as.numeric(as.Date("2019-01-01")), y = 15,
#           label = "Started career at CalEPA", angle = 90,
#           vjust = -1) +
scale_x_date(limits = as.Date(c("2014-04-01", "2022-11-01")),
date_breaks = "3 months",
date_labels = "%B (%Y)"
) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(0.15,0.55),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)
)
engagements
ggsave(engagements,
file = "assets/engagements.jpeg",
bg = "white",
dpi = 300,
width = 8, height = 6,
units = "in",
scale = 0.8)
plotly <- ggplotly(engagements,
#  width = 12,
# height = 8,
tooltip = c("count", "Category"))
htmlwidgets::saveWidget(plotly::as_widget(plotly), "assets/widgets/engagements.html")
plotly
library(DT)
table <- date %>% dplyr::select(c(Year, Month, day, month_number))
datatable <- datatable(table,
options = list(autoWidth = TRUE),
filter = list(position = 'top'),
rownames = FALSE)
htmlwidgets::saveWidget(datatable, "assets/widgets/datatable.html")
datatable
date %>%
group_by(Category) %>%
summarize(n())
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(lubridate)
library(plotly)
#read in data
cv <- readxl::read_xlsx("assets/data/presentation tracking spreadsheet.xlsx")
#convert dates
date <- cv %>%
mutate(day = 1) %>%
mutate(month_number = match(Month, month.name)) %>%
mutate(date = make_date(year = Year, month = month_number, day = day)) %>%
mutate(Category = as.factor(Category),
Type = as.factor(Type),
Face = as.factor(Face))
#plot
engagements <- date %>%
ggplot() +
geom_histogram(aes(x = date,
#color = Category,
fill = Category
#fill = Face,
),
binwidth = 91,
position = "stack") + #quarterly
#geom_vline(xintercept = as.numeric(as.Date("2016-09-01")), linetype = 2) +
# geom_text(x = as.numeric(as.Date("2016-09-01")), y = 15,
#           label = "Passed qualifying exam", angle = 90,
#           vjust = -1) +
# geom_vline(xintercept = as.numeric(as.Date("2019-01-01")), linetype = 2) +
#  geom_text(x = as.numeric(as.Date("2019-01-01")), y = 15,
#           label = "Started career at CalEPA", angle = 90,
#           vjust = -1) +
scale_x_date(limits = as.Date(c("2014-04-01", "2022-11-01")),
date_breaks = "3 months",
date_labels = "%B (%Y)"
) +
ylab("Number per Quarter") +
labs(title = "Speaking Engagements Over Time",
subtitle = "Scott Coffin, Ph.D.") +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, face = "italic"),
legend.position = c(0.15,0.55),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)
)
engagements
ggsave(engagements,
file = "assets/engagements.jpeg",
bg = "white",
dpi = 300,
width = 8, height = 6,
units = "in",
scale = 0.8)
plotly <- ggplotly(engagements,
#  width = 12,
# height = 8,
tooltip = c("count", "Category"))
htmlwidgets::saveWidget(plotly::as_widget(plotly), "assets/widgets/engagements.html")
plotly
library(DT)
table <- date %>% dplyr::select(c(Year, Month, day, month_number))
datatable <- datatable(table,
options = list(autoWidth = TRUE),
filter = list(position = 'top'),
rownames = FALSE)
htmlwidgets::saveWidget(datatable, "assets/widgets/datatable.html")
datatable
date %>%
group_by(Category) %>%
summarize(n())
# Example table data (particle size and corresponding percentage)
particle_table <- data.frame(
particle_size = c(10, 15, 20, 25, 30),
percentage = c(20, 30, 15, 10, 25)
)
# Generate histogram
hist(particle_table$particle_size,
main = "Particle Size Distribution",
xlab = "Particle Size",
ylab = "Percentage of Total Particles",
ylim = c(0, max(particle_table$percentage)),
breaks = seq(min(particle_table$particle_size)-5, max(particle_table$particle_size)+5, by = 5),
col = "lightblue",
border = "white",
probability = TRUE
)
# Add percentage labels on top of the histogram bars
for (i in 1:nrow(particle_table)) {
text(particle_table$particle_size[i], particle_table$percentage[i], paste0(particle_table$percentage[i], "%"), pos = 3)
}
# Example table data (particle size and corresponding percentage)
particle_table <- data.frame(
particle_size = c(10, 15, 20, 25, 30),
percentage = c(20, 30, 15, 10, 25)
)
# Generate histogram
hist(particle_table$particle_size,
main = "Particle Size Distribution",
xlab = "Particle Size",
ylab = "Percentage of Total Particles",
ylim = c(0, max(particle_table$percentage)),
breaks = seq(min(particle_table$particle_size)-5, max(particle_table$particle_size)+5, by = 5),
col = "lightblue",
border = "white",
probability = TRUE
)
# Add percentage labels on top of the histogram bars
for (i in 1:nrow(particle_table)) {
text(particle_table$particle_size[i], particle_table$percentage[i], paste0(particle_table$percentage[i], "%"), pos = 3)
}
# Example table data (particle size and corresponding percentage)
particle_table <- data.frame(
particle_size = c(10, 15, 20, 25, 30),
percentage = c(20, 30, 15, 10, 25)
)
# Calculate cumulative percentage
cumulative_percentage <- cumsum(particle_table$percentage)
# Generate cumulative distribution plot
plot(particle_table$particle_size, cumulative_percentage,
main = "Cumulative Distribution of Particle Size",
xlab = "Particle Size",
ylab = "Cumulative Percentage",
type = "s",
ylim = c(0, 100),
col = "blue",
lwd = 2
)
# Add percentage labels on top of the plot
for (i in 1:nrow(particle_table)) {
text(particle_table$particle_size[i], cumulative_percentage[i], paste0(cumulative_percentage[i], "%"), pos = 3)
}
# Example table data (particle size and corresponding percentage)
particle_table <- data.frame(
particle_size = c(0.97, 1.38, 2.75, 5.5, 11, 22, 44, 88, 124.5, 176),
percentage = c(5, 8.75, 22, 41, 58, 75, 90, 98.3, 99, 100)
)
# Calculate cumulative percentage
cumulative_percentage <- cumsum(particle_table$percentage)
# Generate cumulative distribution plot
plot(particle_table$particle_size, cumulative_percentage,
main = "Cumulative Distribution of Particle Size",
xlab = "Particle Size",
ylab = "Cumulative Percentage",
type = "s",
ylim = c(0, 100),
col = "blue",
lwd = 2
)
# Add percentage labels on top of the plot
for (i in 1:nrow(particle_table)) {
text(particle_table$particle_size[i], cumulative_percentage[i], paste0(cumulative_percentage[i], "%"), pos = 3)
}
# Example table data (particle size and corresponding percentage)
particle_table <- data.frame(
particle_size = c(0.97, 1.38, 2.75, 5.5, 11, 22, 44, 88, 124.5, 176),
percentage = c(5, 8.75, 22, 41, 58, 75, 90, 98.3, 99, 100)
)
# Calculate cumulative percentage
cumulative_percentage <- cumsum(particle_table$percentage)
# Generate cumulative distribution plot
hist(particle_table$particle_size,
main = "Particle Size Distribution",
xlab = "Particle Size",
ylab = "Percentage of Total Particles",
ylim = c(0, max(particle_table$percentage)),
breaks = seq(min(particle_table$particle_size)-5, max(particle_table$particle_size)+5, by = 5),
col = "lightblue",
border = "white",
probability = TRUE
)
# Add percentage labels on top of the plot
for (i in 1:nrow(particle_table)) {
text(particle_table$particle_size[i], cumulative_percentage[i], paste0(cumulative_percentage[i], "%"), pos = 3)
}
# Example table data (particle size and corresponding percentage)
particle_table <- data.frame(
particle_size = c(0.97, 1.38, 2.75, 5.5, 11, 22, 44, 88, 124.5, 176),
percentage = c(5, 8.75, 22, 41, 58, 75, 90, 98.3, 99, 100)
)
# Calculate cumulative percentage
cumulative_percentage <- cumsum(particle_table$percentage)
# Generate cumulative distribution plot
hist(particle_table$particle_size,
main = "Particle Size Distribution",
xlab = "Particle Size",
ylab = "Percentage of Total Particles",
ylim = c(0, max(particle_table$percentage)),
breaks = seq(min(particle_table$particle_size)-5, max(particle_table$particle_size)+5, by = 5),
col = "lightblue",
border = "black",
probability = TRUE
)
# Add percentage labels on top of the plot
for (i in 1:nrow(particle_table)) {
text(particle_table$particle_size[i], cumulative_percentage[i], paste0(cumulative_percentage[i], "%"), pos = 3)
}
# Example table data (particle size and corresponding percentage)
particle_table <- data.frame(
particle_size = c(0.97, 1.38, 2.75, 5.5, 11, 22, 44, 88, 124.5, 176),
percentage = c(5, 8.75, 22, 41, 58, 75, 90, 98.3, 99, 100)
)
# Calculate cumulative percentage
cumulative_percentage <- cumsum(particle_table$percentage)
# Generate cumulative distribution plot
hist(particle_table$particle_size,
main = "Particle Size Distribution",
xlab = "Particle Size",
ylab = "Percentage of Total Particles",
ylim = c(0, max(particle_table$percentage)),
breaks = seq(min(particle_table$particle_size)-5, max(particle_table$particle_size)+5, by = 5),
col = "lightblue",
border = "white",
probability = TRUE
)
# Add percentage labels on top of the plot
for (i in 1:nrow(particle_table)) {
text(particle_table$particle_size[i], cumulative_percentage[i], paste0(cumulative_percentage[i], "%"), pos = 3)
}
particle_table <- data.frame(
particle_size = c(0.97, 1.38, 2.75, 5.5, 11, 22, 44, 88, 124.5, 176),
percentage = c(5, 8.75, 22, 41, 58, 75, 90, 98.3, 99, 100)
)
library(tidyverse)
particle_table %>%
ggplot(aes(x = particle_size, y = percentage)) +
geom_bar()
particle_table %>%
ggplot(aes(x = particle_size, y = percentage)) +
geom_col()
particle_table %>%
ggplot(aes(x = particle_size, y = percentage)) +
geom_col() +
theme_minimal()
particle_table %>%
ggplot(aes(x = particle_size, y = percentage)) +
geom_point() +
theme_minimal()
particle_table %>%
ggplot(aes(x = particle_size, y = percentage)) +
geom_point() +
geom_smooth() +
theme_minimal()
particle_table %>%
ggplot(aes(x = particle_size, y = percentage)) +
geom_point() +
theme_minimal()
particle_table %>%
ggplot(aes(x = particle_size, y = percentage)) +
geom_point() +
geom_line() +
theme_minimal()
particle_table %>%
ggplot(aes(x = particle_size, y = percentage)) +
geom_point() +
geom_line() +
scale_x_log_10(+)
particle_table %>%
ggplot(aes(x = particle_size, y = percentage)) +
geom_point() +
geom_line() +
scale_x_log_10()+
theme_minimal()
particle_table %>%
ggplot(aes(x = particle_size, y = percentage)) +
geom_point() +
geom_line() +
scale_x_log_10()+
theme_minimal()
particle_table %>%
ggplot(aes(x = particle_size, y = percentage)) +
geom_point() +
geom_line() +
scale_x_log_10() +
theme_minimal()
particle_table %>%
ggplot(aes(x = particle_size, y = percentage)) +
geom_point() +
geom_line() +
scale_x_log10() +
theme_minimal()
particle_table %>%
ggplot(aes(x = particle_size, y = percentage)) +
geom_point() +
geom_line() +
scale_x_log10() +
xlab("Particle Size (um)") +
ylab("Percentage of ISO Test Dust under Size") +
theme_minimal()
particle_table %>%
ggplot(aes(x = particle_size, y = percentage)) +
geom_point() +
geom_line() +
scale_x_log10() +
xlab("Particle Size (um)") +
ylab("% ISO 12103-1 A2 Fine Test Dust Less Than Size (by volume)") +
theme_minimal()
